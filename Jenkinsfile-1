pipeline {
    agent any

    stages {
        stage('Prepare') {
            steps {
                script {
                    def GIT_BRANCH = sh(
                        returnStdout: true,
                        script: 'git rev-parse --abbrev-ref HEAD'
                    ).trim()

                    echo "Current Git branch: ${GIT_BRANCH}"

                    // Assuming that you want to use the same branch for all subsequent stages
                    // If you want to dynamically change the branch based on the commit, additional logic is needed
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: "${GIT_BRANCH}"]],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [[$class: 'LocalBranch']],
                        submoduleCfg: [],
                        userRemoteConfigs: [[
                            url: 'https://github.com/piyush-muppala/old.git']]
                    ])
                }
            }
        }

        stage('Build') {
            when {
                expression {
                    def GIT_BRANCH = sh(
                        returnStdout: true,
                        script: 'git rev-parse --abbrev-ref HEAD'
                    ).trim()
                    return GIT_BRANCH == 'origin/master'
                }
            }
            steps {
                echo 'master'
            }
        }

        stage('Build Skipped') {
            when {
                expression {
                    def GIT_BRANCH = sh(
                        returnStdout: true,
                        script: 'git rev-parse --abbrev-ref HEAD'
                    ).trim()
                    return !(GIT_BRANCH == 'origin/master')
                }
            }
            steps {
                echo 'Skipped full build.'
            }
        }
    }
}
