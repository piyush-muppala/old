pipeline {
    agent any
    parameters {
        string(
            defaultValue: '*',
            description: '',
            name: 'BRANCH_PATTERN'
        )
    }

    stages {
        stage('Prepare') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: "origin/${params.BRANCH_PATTERN}"]],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [[$class: 'LocalBranch']],
                    submoduleCfg: [],
                    userRemoteConfigs: [[
                        url: 'https://github.com/piyush-muppala/old.git']]
                ])
            }
        }

        stage('Build') {
            when {
                expression {
                    def GIT_BRANCH = 'origin/' + sh(
                        returnStdout: true,
                        script: 'git rev-parse --abbrev-ref HEAD'
                    ).trim()
                    return GIT_BRANCH == 'origin/master'
                }
            }
            steps {
                echo 'master'
            }
        }

        stage('Build Skipped') {
            when {
                expression {
                    def GIT_BRANCH = 'origin/' + sh(
                        returnStdout: true,
                        script: 'git rev-parse --abbrev-ref HEAD'
                    ).trim()
                    return !(GIT_BRANCH == 'origin/master')
                }
            }
            steps {
                echo 'Skipped full build.'
            }
        }
    }
}
